CREATE OR REPLACE PACKAGE XYZ.TPW_TEST IS

  -- AUTHOR  : CHENGAB
  -- CREATED : 2012-04-16 9:53:17 AM
  -- PURPOSE : 


PROCEDURE TEST_1;


END TPW_TEST;
/
CREATE OR REPLACE PACKAGE BODY XYZ.TPW_TEST IS


PROCEDURE TEST_1
AS
	tPJob_ID	PLS_INTEGER;
	tSQL		VARCHAR2(256);
BEGIN
	tPJob_ID	:= XYZ.TPW_SCHEDULER.CREATE_PJOB('Test1', 'Tester1', 'This is test1.');

	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 10);
	XYZ.TPW_SCHEDULER.ADD_TASK(tPJob_ID, tSQL, 1, 'Sleep for a while.');
	
	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 70);
	XYZ.TPW_SCHEDULER.ADD_TASK(tPJob_ID, tSQL, 1, 'Sleep for a while.');

	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 30);
	XYZ.TPW_SCHEDULER.ADD_TASK(tPJob_ID, tSQL, 1, 'Sleep for a while.');

	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 70);
	XYZ.TPW_SCHEDULER.ADD_TASK(tPJob_ID, tSQL, 2, 'Sleep for a while.');

	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 15);
	XYZ.TPW_SCHEDULER.ADD_CALLBACK_FOR_SUCCESS(tPJob_ID, tSQL, 3, 'Sleep for a while if success.');

	tSQL	:= UTL_LMS.FORMAT_MESSAGE('DBMS_LOCK.SLEEP(%d)', 15);
	XYZ.TPW_SCHEDULER.ADD_CALLBACK_FOR_FAIL(tPJob_ID, tSQL, 3, 'Sleep for a while if fail.');

	XYZ.TPW_SCHEDULER.START_PJOB(tPJob_ID);

	DBMS_OUTPUT.PUT_LINE('New PJob_ID#' || tPJob_ID);
END TEST_1;


END TPW_TEST;
/
